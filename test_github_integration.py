import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

from Backend.Agents.GitIntegration import handle_git_command

def test_github_repo_creation_and_push():
    """Test GitHub repo creation and push with the generated project"""
    print("🚀 Testing GitHub Repo Creation and Enhanced Push")
    print("=" * 55)
    
    # Use the same project data from previous test
    project_data = {
        'name': 'personal-finance-tracker',
        'local_path': r'C:\Users\mdsam\Desktop\AModernPersonalFinanceTrackerWeb',
        'description': 'AI Generated Personal Finance Tracker with React and Node.js - 27 files generated by NEXUS'
    }
    
    project_name = project_data['name']
    
    print(f"📁 Working with project: {project_name}")
    print(f"📂 Location: {project_data['local_path']}")
    
    # Step 1: Create GitHub repository
    print(f"\n1️⃣ Creating GitHub repository...")
    success, message = handle_git_command("create github repo", project_data)
    print(f"   ✅ Success: {success}")
    print(f"   📄 Message: {message}")
    
    if success:
        # Step 2: Test enhanced push (should handle upstream automatically)
        print(f"\n2️⃣ Testing enhanced Git push (with auto-upstream setup)...")
        success, message = handle_git_command("git push", project_data)
        print(f"   ✅ Success: {success}")
        print(f"   📄 Message: {message}")
        
        # Step 3: Final status check
        print(f"\n3️⃣ Final verification...")
        success, message = handle_git_command("git status", project_data)
        print(f"   ✅ Success: {success}")
        print(f"   📄 Status: {message}")
        
        if success:
            print(f"\n🎉 COMPLETE WORKFLOW SUCCESS!")
            print(f"   ✅ Project Generated: 27 files by NEXUS AI")
            print(f"   ✅ Git Repository: Initialized and configured")
            print(f"   ✅ GitHub Repository: Created successfully")
            print(f"   ✅ Remote Connection: Auto-configured")
            print(f"   ✅ Code Pushed: All files uploaded to GitHub")
            print(f"   🌐 View at: https://github.com/MdSameerBaba/{project_name}")
        
    else:
        print(f"❌ GitHub repo creation failed. Let's check what we have...")
        
        # Still try push to see if repo exists
        print(f"\n🔧 Attempting push anyway (repo might already exist)...")
        success, message = handle_git_command("git push", project_data)
        print(f"   ✅ Push Success: {success}")
        print(f"   📄 Push Message: {message}")
    
    print(f"\n" + "=" * 55)
    print(f"✅ GitHub Integration Test Complete!")
    print(f"📊 Result: End-to-end workflow from NEXUS → Git → GitHub tested!")

if __name__ == "__main__":
    test_github_repo_creation_and_push()